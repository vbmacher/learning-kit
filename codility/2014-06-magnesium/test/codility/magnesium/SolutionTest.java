package codility.magnesium;

import org.junit.After;
import static org.junit.Assert.assertEquals;
import org.junit.Before;
import org.junit.Test;

public class SolutionTest {
    private Solution solution;
    private int N;
    private int[] A;
    private int[] B;
    private int[] C;
    private int expected;

    @Before
    public void setUp() {
        solution = new Solution();
    }

    @After
    public void tearDown() {
        int result = solution.solution(N, A, B, C);
        assertEquals(expected, result);
    }

    @Test
    public void test01() {
        N = 6;
        A = new int[]{0, 1, 1, 2, 3, 4, 5, 3};
        B = new int[]{1, 2, 3, 3, 4, 5, 0, 2};
        C = new int[]{4, 3, 2, 5, 6, 6, 8, 7};
        expected = 4;
    }

    @Test
    public void test02() {
        N = 5;
        A = new int[]{2, 1, 3, 0, 1, 3, 0};
        B = new int[]{1, 1, 4, 4, 0, 2, 1};
        C = new int[]{4, 15, 10, 7, 2, 5, 16};
        expected = 4;
    }

    @Test
    public void test03() {
        N = 2;
        A = new int[]{1};
        B = new int[]{0};
        C = new int[]{1};
        expected = 1;
    }

    @Test
    public void test04() {
        N = 100;
        A = new int[]{18, 66, 33, 19, 48, 49, 47, 45, 26, 25, 69, 32, 67, 78, 86, 94, 23, 23, 73, 57, 20, 67, 87, 83, 21, 29, 0, 97, 22, 72, 53, 59, 52, 82, 59, 30, 11, 47, 92, 14, 68, 63, 16, 20, 68, 43, 40, 48, 10, 70, 58, 53, 33, 81, 82, 54, 8, 14, 15, 7, 64, 54, 20, 91, 62, 79, 81, 68, 52, 98, 13, 68, 88, 47, 81, 18, 41, 27, 39, 70, 14, 33, 84, 30, 12, 99, 54, 1, 57, 14, 16, 73, 65, 42, 51, 55, 45, 10, 76, 77, 42, 40, 61, 47, 41, 87, 90, 15, 17, 78, 95, 73, 29, 5, 82, 93, 75, 73, 97, 52, 93, 26, 7, 83, 69, 79, 13, 30, 58, 6, 32, 60, 93, 71, 39, 40, 51, 74, 99, 1, 92, 80, 4, 25, 27, 21, 16, 13, 67, 43, 10, 84, 83, 26, 82, 77, 53, 8, 70, 87, 88, 94, 16, 97, 9, 36, 53, 63, 52, 90, 77, 85, 67, 45, 2, 64, 93, 19, 99, 1, 39, 75, 71, 57, 28, 24, 13, 64, 1, 12, 71, 44, 1, 42, 92, 51, 26, 13, 49, 24};
        B = new int[]{67, 78, 52, 51, 39, 99, 28, 14, 26, 26, 32, 26, 10, 32, 31, 56, 20, 7, 20, 54, 38, 73, 80, 41, 9, 72, 75, 39, 65, 29, 91, 83, 79, 95, 23, 54, 73, 80, 39, 13, 62, 10, 70, 0, 45, 47, 11, 48, 50, 36, 89, 86, 89, 24, 2, 37, 11, 70, 26, 12, 28, 40, 73, 46, 30, 67, 4, 20, 68, 75, 10, 6, 50, 65, 1, 43, 27, 8, 17, 28, 46, 11, 62, 87, 68, 6, 64, 63, 0, 38, 65, 95, 92, 56, 58, 95, 21, 50, 6, 77, 65, 21, 19, 52, 75, 13, 32, 51, 26, 88, 72, 95, 64, 68, 28, 50, 42, 47, 6, 84, 15, 45, 93, 51, 86, 26, 46, 37, 32, 36, 44, 84, 97, 9, 66, 52, 41, 4, 36, 31, 36, 59, 36, 29, 27, 97, 39, 97, 16, 66, 55, 70, 51, 87, 58, 4, 68, 61, 24, 73, 83, 27, 14, 28, 58, 44, 7, 44, 54, 57, 35, 78, 67, 25, 34, 92, 22, 44, 30, 58, 79, 12, 19, 6, 12, 52, 48, 94, 45, 52, 2, 22, 30, 24, 78, 41, 13, 53, 15, 18};
        C = new int[]{46, 35, 39, 46, 13, 32, 46, 44, 29, 9, 21, 50, 6, 16, 48, 23, 11, 16, 46, 17, 22, 32, 41, 25, 5, 29, 2, 5, 10, 35, 15, 35, 9, 6, 2, 36, 43, 11, 12, 1, 33, 16, 7, 33, 30, 23, 8, 32, 28, 22, 9, 47, 44, 35, 50, 30, 18, 6, 31, 26, 22, 50, 42, 6, 45, 1, 33, 16, 37, 48, 27, 39, 3, 34, 6, 23, 17, 4, 38, 5, 13, 5, 34, 16, 3, 2, 11, 26, 1, 2, 34, 27, 7, 16, 7, 14, 20, 11, 10, 12, 16, 28, 45, 33, 23, 1, 10, 32, 21, 43, 46, 15, 19, 15, 34, 5, 14, 44, 19, 49, 20, 42, 24, 5, 29, 11, 46, 36, 27, 47, 28, 49, 36, 9, 15, 43, 5, 50, 3, 38, 31, 21, 31, 30, 18, 15, 3, 33, 45, 19, 43, 20, 13, 41, 47, 5, 44, 16, 39, 15, 50, 17, 11, 3, 7, 5, 42, 2, 6, 12, 8, 39, 1, 35, 18, 8, 12, 27, 13, 20, 20, 27, 36, 15, 31, 36, 15, 39, 5, 25, 18, 7, 33, 43, 25, 18, 46, 50, 32, 29};
        expected = 11;
    }

}
